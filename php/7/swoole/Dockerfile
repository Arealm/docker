FROM alpine:latest

# persistent / runtime deps
ENV PHPIZE_DEPS \
        autoconf \
        dpkg-dev dpkg \
        file \
        g++ \
        gcc \
        libc-dev \
        make \
        pcre-dev \
        pkgconf \
        re2c
RUN apk add --no-cache --virtual .persistent-deps \
        ca-certificates \
        curl \
        tar \
        xz \
        openssl

# ensure www-data user exists
RUN set -x \
	&& addgroup -g 82 -S www-data \
	&& adduser -u 82 -D -S -G www-data www-data

ENV PHP_INI_DIR /usr/local/etc/php

RUN mkdir -p $PHP_INI_DIR/conf.d

##<autogenerated>##
ENV PHP_EXTRA_CONFIGURE_ARGS --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data
# ENV APACHE_MODULE --with-apxs2=/usr/local/apache2/bin/apxs
##</autogenerated>##

# Apply stack smash protection to functions using local buffers and alloca()
# Make PHP's main executable position-independent (improves ASLR security mechanism, and has no performance impact on x86_64)
# Enable optimization (-O2)
# Enable linker optimization (this sorts the hash buckets to improve cache locality, and is non-default)
# Adds GNU HASH segments to generated executables (this is used if present, and is much faster than sysv hash; in this configuration, sysv hash is also generated)
# https://github.com/docker-library/php/issues/272
ENV PHP_CFLAGS="-fstack-protector-strong -fpic -fpie -O2"
ENV PHP_CPPFLAGS="$PHP_CFLAGS"
ENV PHP_LDFLAGS="-Wl,-O1 -Wl,--hash-style=both -pie"
ENV PHP_VERSION 7.1.12

# COPY php-7.1.12.tar.xz /usr/src/php.tar.xz
# COPY php-ext.tar.xz /usr/src/php-ext.tar.xz

RUN set -xe \
    && echo '@community http://nl.alpinelinux.org/alpine/edge/community' >> /etc/apk/repositories \
    && apk add --no-cache --virtual .build-deps \
        $PHPIZE_DEPS \
        bzip2-dev \
        libbz2 \
        coreutils \
        curl-dev \
        libedit-dev \
        libressl-dev \
        libxml2-dev \
        sqlite-dev \
        libpng-dev \
        jpeg-dev \
        libxpm-dev \
        zlib-dev \
        freetype-dev \
        libmemcached-dev \
        cyrus-sasl-dev \
        libevent-dev \
        gettext-dev \
        gmp-dev \
        imap-dev \
        krb5-dev \
        icu-dev \
        enchant-dev \
        openldap-dev \
        freetds-dev \
        aspell-dev \
        readline-dev \
        libedit-dev \
        net-snmp-dev \
        libxslt-dev \
        tidyhtml-dev@community \
        db-dev \
        gdbm-dev \
        libmcrypt libmcrypt-dev \
        build-base \
        # swoole
        linux-headers \
        # geoip
        geoip-dev \
        # imagemagick
        imagemagick-dev \
        libtool \
        libltdl \
        wget \
    && mkdir -p /usr/src \
    && wget -O /usr/src/php-ext.tar.xz https://raw.githubusercontent.com/zhaokongdong/docker/master/php/7/fpm/php-ext.tar.xz \
    && wget -O /usr/src/php.tar.xz https://raw.githubusercontent.com/zhaokongdong/docker/master/php/7/fpm/php-7.1.12.tar.xz \
    && export CFLAGS="$PHP_CFLAGS" \
        CPPFLAGS="$PHP_CPPFLAGS" \
        LDFLAGS="$PHP_LDFLAGS" \
    && mkdir -p /usr/src/php \
    && mkdir -p /usr/include/freetype2/freetype \
    && cp /usr/include/tidybuffio.h /usr/include/buffio.h \
    && tar -Jxf /usr/src/php.tar.xz -C /usr/src/php --strip-components=1 \
    && tar -Jxf /usr/src/php-ext.tar.xz -C /usr/src/php/ext --strip-components=1 \
    && cd /usr/src/php \
    && gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
    && ./configure \
        --build="$gnuArch" \
        --with-config-file-path="$PHP_INI_DIR" \
        --with-config-file-scan-dir="$PHP_INI_DIR/conf.d" \
        --disable-cgi \
        --enable-short-tags \
        --with-curlwrappers \
        --with-cdb \
        --with-flatfile \
        --with-inifile \
        --with-libedit \
        --enable-fileinfo \
        --with-xpm-dir \
        --with-ttf \
        --with-mhash \
        --enable-inline-optimization \
        --enable-pcntl \
        --enable-mbregex \
        --enable-mbstring \
        --enable-shared \
        --enable-session \
        --enable-pdo \
        --enable-xml \
        --enable-libxml \
        --enable-bcmath \
        --enable-calendar \
        --enable-exif \
        --enable-ftp \
        --enable-json \
        --enable-dba \
        --with-gdbm \
        --enable-phar \
        --enable-posix \
        --enable-ctype \
        --enable-shmop \
        --enable-soap \
        --enable-sockets \
        --enable-sysvmsg \
        --enable-sysvsem \
        --enable-xmlreader \
        --enable-sysvshm \
        --enable-zip \
        --enable-wddx \
        --enable-intl \
        --enable-dom \
        --with-bz2 \
        --with-curl \
        --with-enchant \
        --with-gd \
        --with-jpeg-dir \
        --with-png-dir \
        --with-freetype-dir \
        --enable-gd-native-ttf \
        --enable-gd-jis-conv \
        --with-xmlrpc \
        --with-iconv \
        --with-gettext \
        --with-zlib \
        --with-zlib-dir \
        --with-openssl \
        --with-kerberos \
        --with-imap \
        --with-imap-ssl \
        --with-ldap \
        --with-ldap-sasl \
        --with-mcrypt \
        --with-gmp \
        --enable-mysqlnd \
        --with-pdo-mysql \
        --with-mysql \
        --with-mysqli \
        --with-pdo-dblib \
        --with-pspell \
        --with-snmp \
        --enable-simplexml \
        --with-tidy \
        --with-xsl \
        --with-layout=GNU \
        --with-regex=php \
        --with-icu-dir=/usr \
        --with-pcre-regex=/usr \
        --with-readline \
        --with-pear \
        --with-pic \
        --with-libdir=lib \
        --enable-opcache \
        $PHP_EXTRA_CONFIGURE_ARGS \
        $APACHE_MODULE \
    && make -j "$(nproc)" \
    && make install \
    # geoip-1.1.1
    && cd /usr/src/php/ext/geoip-1.1.1 \
    && phpize && ./configure && make && make install \
    # igbinary-2.0.5
    && cd /usr/src/php/ext/igbinary-2.0.5 \
    && phpize && ./configure && make && make install \
    # imagick-3.4.3
    && cd /usr/src/php/ext/imagick-3.4.3 \
    && phpize && ./configure && make && make install \
    # memcached-3.0.4
    && cd /usr/src/php/ext/memcached-3.0.4 \
    && phpize && ./configure && make && make install \
    # mongodb-1.3.4
    # && cd /usr/src/php/ext/mongodb-1.3.4 \
    # && phpize && ./configure && make && make install \
    # redis-3.1.5
    && cd /usr/src/php/ext/redis-3.1.5 \
    && phpize && ./configure && make && make install \
    # swoole-2.0.10
    && cd /usr/src/php/ext/swoole-2.0.10 \
    && phpize && ./configure && make && make install \
    # xdebug-2.5.5
    && cd /usr/src/php/ext/xdebug-2.5.5 \
    && phpize && ./configure && make && make install \
    && { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; } \
    && make clean \
    && cd / \
    && rm -rf /usr/src/php /usr/src/php.tar.xz /usr/src/php-ext.tar.xz \
    && runDeps="$( \
        scanelf --needed --nobanner --format '%n#p' --recursive /usr/local \
            | tr ',' '\n' \
            | sort -u \
            | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
    )" \
    && apk add --no-cache --virtual .php-rundeps $runDeps \
    # clean
    && apk del .build-deps \
    && pecl update-channels \
    && rm -rf /tmp/pear ~/.pearrc \
    # add php ext config
    && touch /usr/local/etc/php/php.ini \
    && echo "extension=geoip.so" >> /usr/local/etc/php/php.ini \
    && echo "extension=igbinary.so" >> /usr/local/etc/php/php.ini \
    && echo "extension=imagick.so" >> /usr/local/etc/php/php.ini \
    && echo "extension=memcached.so" >> /usr/local/etc/php/php.ini \
    && echo "extension=mongodb.so" >> /usr/local/etc/php/php.ini \
    && echo "extension=redis.so" >> /usr/local/etc/php/php.ini \
    && echo "extension=swoole.so" >> /usr/local/etc/php/php.ini \
    && echo "zend_extension=xdebug.so" >> /usr/local/etc/php/php.ini \
    && echo "zend_extension=opcache.so" >> /usr/local/etc/php/php.ini \
    && echo "date.timezone=Asia/Shanghai" >> /usr/local/etc/php/php.ini

#composer
RUN set -ex \
    && php -r "copy('https://install.phpcomposer.com/installer', 'composer-setup.php');" \
    && php composer-setup.php --install-dir=/usr/local/bin --filename=composer \
    && php -r "unlink('composer-setup.php');"

COPY docker-php-entrypoint /usr/local/bin/docker-php-entrypoint
ENTRYPOINT ["docker-php-entrypoint"]

##<autogenerated>##
WORKDIR /var/www/html

RUN set -ex \
    && chmod +x /usr/local/bin/docker-php-entrypoint \
	&& cd /usr/local/etc \
	&& if [ -d php-fpm.d ]; then \
		# for some reason, upstream's php-fpm.conf.default has "include=NONE/etc/php-fpm.d/*.conf"
		sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null; \
		cp php-fpm.d/www.conf.default php-fpm.d/www.conf; \
	else \
		# PHP 5.x doesn't use "include=" by default, so we'll create our own simple config that mimics PHP 7+ for consistency
		mkdir php-fpm.d; \
		cp php-fpm.conf.default php-fpm.d/www.conf; \
		{ \
			echo '[global]'; \
			echo 'include=etc/php-fpm.d/*.conf'; \
		} | tee php-fpm.conf; \
	fi \
	&& { \
		echo '[global]'; \
		echo 'error_log = /proc/self/fd/2'; \
		echo; \
		echo '[www]'; \
		echo '; if we send this to /proc/self/fd/1, it never appears'; \
		echo 'access.log = /proc/self/fd/2'; \
		echo; \
		echo 'clear_env = no'; \
		echo; \
		echo '; Ensure worker stdout and stderr are sent to the main error log.'; \
		echo 'catch_workers_output = yes'; \
	} | tee php-fpm.d/docker.conf \
	&& { \
		echo '[global]'; \
		echo 'daemonize = no'; \
		echo; \
		echo '[www]'; \
		echo 'listen = [::]:9000'; \
	} | tee php-fpm.d/zz-docker.conf \
    # install composer
    && php -r "copy('https://install.phpcomposer.com/installer', 'composer-setup.php');" \
    && php composer-setup.php --install-dir=/usr/local/bin --filename=composer \
    && php -r "unlink('composer-setup.php');"

EXPOSE 9000
CMD ["php-fpm"]